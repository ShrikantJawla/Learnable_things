<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../common/commonHeader'); %>
        <link href="./admin/assets/plugins/datatables/datatables.min.css" rel="stylesheet" />
</head>

<body>
    <div class="app align-content-stretch d-flex flex-wrap">
        <%- include('../common/commonSidebar' , {sidebarData : sidebarDataByServer}); %>
            <%- include('../common/commonModals'); %>
                <div class="app-container">
                    <div class="app-content">
                        <div class="content-wrapper">
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col">
                                        <div class="app-content">
                                            <h1 class="application-title">
                                                Admin Users
                                            </h1>
                                            <hr />
                                            <div class="top-btns">
                                                <a class="ci-btn" data-bs-toggle="modal"
                                                    data-bs-target="#ciAddNewAdminUserForm" onclick="">Add New User</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5 class="card-title">
                                                    Admin Users
                                                </h5>
                                            </div>
                                            <div class="card-body" id="dataToShow">
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <div class="sbl-circ-path"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
    </div>

    <!-- Javascripts -->
    <script src="./admin/assets/plugins/jquery/jquery-3.5.1.min.js"></script>
    <script src="./admin/assets/plugins/bootstrap/js/popper.min.js"></script>
    <script src="./admin/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="./admin/assets/plugins/perfectscroll/perfect-scrollbar.min.js"></script>
    <script src="./admin/assets/plugins/pace/pace.min.js"></script>
    <script src="./admin/assets/plugins/highlight/highlight.pack.js"></script>
    <script src="./admin/assets/plugins/datatables/datatables.min.js"></script>
    <script src="./admin/assets/js/main.min.js"></script>
    <script src="./admin/assets/js/custom.js"></script>
    <script src="./admin/assets/js/pages/datatables.js"></script>
    <script src="./admin/assets/js/utils/blockModalsEsacping.js"></script>
    <script>
        let USERADMINS = {};
        USERADMINS.upId = "";
        USERADMINS.upName = "";
        USERADMINS.upEmail = "";
        USERADMINS.upRole = "";
        USERADMINS.upStrapiId = "";
        USERADMINS.upActive = "";

        USERADMINS.getUserAdminData = function () {
            $.ajax({
                url: "/admin-users-data",
                type: "GET",
                success: function (result) {
                    console.log("ajax data to be replaced ");
                    $("#dataToShow").html(result);
                },
            });
        };

        USERADMINS.getUserAdminRoles = function () {
            $.ajax({
                url: "/admin-user-roles",
                type: "GET",
                success: function (result) {
                    // console.log(result, "result from roles ");
                    USERADMINS.userRolesInAddAdminUser(result.payload);
                },
            });
        };

        USERADMINS.userRolesInAddAdminUser = function (result) {
            let adminRoleTag =
                document.getElementById("userAdminRolesHere");
            let adminRoleTagu = document.getElementById(
                "userAdminRolesHereu"
            );
            let appendData = `<option value="0" selected>Select User Role</option>`;
            for (let i = 0; i < result.length; i++) {
                appendData =
                    appendData +
                    `<option value="${result[i].uar_id}" selected>${result[i].uar_roll_name}</option>`;
            }
            adminRoleTag.innerHTML = appendData;
            adminRoleTagu.innerHTML = appendData;
        };

        // adding new admin user

        USERADMINS.addNewAdminUser = function () {
            let validEmailRegex =
                /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
            let newAdminUserName = $("#adminUserName").val();
            let newAdminEmail = $("#adminEmail").val();
            let newAdminPassword = $("#adminPassword").val();
            let newAdminRole = $("#userAdminRolesHere").val();
            let userStrapiId = $("#new_strapi_user_id").val();
            let newAdminFormError = $("#errorShow");
            let newActiveUser = $("#new_active_user").is(":checked");
            console.log("New  active in user admin ------->>>>", newActiveUser);

            if (
                newAdminUserName === "" ||
                newAdminUserName === null ||
                newAdminUserName === undefined
            ) {
                return newAdminFormError.html(
                    `<p class="error-text"> Username can't be empty</p>`
                );
            } else if (!newAdminEmail.match(validEmailRegex)) {
                return newAdminFormError.html(
                    `<p class="error-text">Not a valid email address</p>`
                );
            } else if (newAdminPassword.length <= 6) {
                return newAdminFormError.html(
                    `<p class="error-text">Pasword can't be less than 6 characters.</p>`
                );
            } else if (newAdminRole == 0) {
                return newAdminFormError.html(
                    `<p class="error-text">Please select a role</p>`
                );
            } else {
                $.ajax({
                    url: "/admin-add-new-user",
                    type: "POST",
                    data: {
                        UAuserName: newAdminUserName,
                        UAuserEmail: newAdminEmail,
                        UApassword: newAdminPassword,
                        UAuserRole: newAdminRole,
                        UAstrapiId: userStrapiId,
                        UAactiveUser: newActiveUser
                    },
                    success: function (result) {
                        console.log("hey user added ");

                        if (result.status === true) {
                            console.log("hy");
                            $("#ciAddNewAdminUserForm").modal("toggle");
                            USERADMINS.getUserAdminData();
                            USERADMINS.getUserAdminRoles();
                        } else {
                            newAdminFormError.html(
                                `<p class="error-text">There is a problem while adding User</p>`
                            );
                        }
                    },
                });
            }
        };

        // updating existing admin user
        USERADMINS.updateAdminUser = function () {
            let validEmail =
                /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
            let userId = USERADMINS.upId;
            let userName = $("#adminUserNameu").val();
            let userEmail = $("#adminEmailu").val();
            let userPassword = $("#adminPasswordu").val();
            let userRole = $("#userAdminRolesHereu").val();
            let userStrapiId = $("#edit_strapi_user_id").val();
            let updateAdminFormError = $("#errorShowu");
            let userActiveUser = $("#edit_active_user").is(":checked");
            console.log("upade actice in user admin ------->>>>", userActiveUser);


            if (
                userName === "" ||
                userName === null ||
                userName === undefined
            ) {
                return updateAdminFormError.html(
                    `<p class="error-text"> Username can't be empty</p>`
                );
            } else if (!userEmail.match(validEmail)) {
                return updateAdminFormError.html(
                    `<p class="error-text">Not a valid email address</p>`
                );
            } else if (userRole == 0) {
                return updateAdminFormError.html(
                    `<p class="error-text">Please select a role</p>`
                );
            } else {
                $.ajax({
                    url: "/admin-update-user",
                    type: "POST",
                    data: {
                        ua_id: userId,
                        ua_password: userPassword,
                        ua_name: userName,
                        ua_email: userEmail,
                        ua_role: userRole,
                        ua_strapi_user_id: userStrapiId,
                        ua_active_user: userActiveUser
                    },
                    success: function (result) {
                        if (result.status === true) {
                            $("#ciUpdateAdminUserForm").modal("toggle");
                            USERADMINS.getUserAdminData();
                            USERADMINS.getUserAdminRoles();
                        } else {
                            newAdminFormError.html(
                                `<p class="error-text">There is a problem while updating user</p>`
                            );
                        }
                        $("#edit_strapi_user_id").val("");
                    },
                });
            }
        };

        $("#ciUpdateAdminUserForm").on("show.bs.modal", function (e) {
            // console.log($(e.relatedTarget).data());
            //get data-id attribute of the clicked element
            USERADMINS.upId = $(e.relatedTarget).data("up-id");
            USERADMINS.upName = $(e.relatedTarget).data("up-name");
            USERADMINS.upEmail = $(e.relatedTarget).data("up-email");
            USERADMINS.upRole = $(e.relatedTarget).data("up-role");
            USERADMINS.upStrapiId = $(e.relatedTarget).data(
                "upStrapi_user_id"
            );
            USERADMINS.upActive = $(e.relatedTarget).data("up-active_user");

            console.log(USERADMINS.upActive);
            //populate the textbox
            $(e.currentTarget)
                .find('input[name="adminUserNameu"]')
                .val(USERADMINS.upName);
            $(e.currentTarget)
                .find('input[name="adminEmailu"]')
                .val(USERADMINS.upEmail);
            $(e.currentTarget)
                .find("#userAdminRolesHereu")
                .val(USERADMINS.upRole);
            $(e.currentTarget)
                .find("#edit_strapi_user_id")
                .val(USERADMINS.upStrapiId);
            $(e.currentTarget).find("#adminPasswordu").val("");
            // $(e.currentTarget)
            //     .find("#edit_active_user")
            //     .val(USERADMINS.upActive);
            $(e.currentTarget)
                .find("#edit_active_user").prop('checked', USERADMINS.upActive);
        });

        $(document).ready(function () {
            USERADMINS.getUserAdminData();
            USERADMINS.getUserAdminRoles();
        });

            // function exportToCsv(filename, rows) {
            //     console.log("hi im in exportToCsv");
            //     var processRow = function(row) {

            //         var finalVal = '';
            //         for (var j = 0; j < row.length; j++) {
            //             var innerValue = row[j] === null ? '' : row[j].toString();
            //             if (row[j] instanceof Date) {
            //                 innerValue = row[j].toLocaleString();
            //             };
            //             var result = innerValue.replace(/"/g, '""');
            //             if (result.search(/("|,|\n)/g) >= 0)
            //                 result = '"' + result + '"';
            //             if (j > 0)
            //                 finalVal += ',';
            //             finalVal += result;
            //         }
            //         return finalVal + '\n';
            //     };

            //     var csvFile = '';
            //     for (var i = 0; i < rows.length; i++) {
            //         csvFile += processRow(rows[i]);
            //     }

            //     var blob = new Blob([csvFile], {
            //         type: 'text/csv;charset=utf-8;'
            //     });
            //     if (navigator.msSaveBlob) { // IE 10+
            //         navigator.msSaveBlob(blob, filename);
            //     } else {
            //         var link = document.createElement("a");
            //         if (link.download !== undefined) { // feature detection
            //             // Browsers that support HTML5 download attribute
            //             var url = URL.createObjectURL(blob);
            //             link.setAttribute("href", url);
            //             link.setAttribute("download", filename);
            //             link.style.visibility = 'hidden';
            //             document.body.appendChild(link);
            //             link.click();
            //             document.body.removeChild(link);
            //         }
            //     }
            // }

            // exportToCsv('expt.csv', [
            //     ['name', 'description'],
            //     ['david', '123'],
            //     ['jona', '""'],
            //     ['a', 'b'],

            // ])
    </script>
</body>

</html>